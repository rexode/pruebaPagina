{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santi\\\\Desktop\\\\prueba pagina\\\\collection\\\\src\\\\App.js\";\nimport './App.css';\nimport { ethers } from \"ethers\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  var _s = $RefreshSig$();\n\n  const initConnection = async () => {\n    _s();\n\n    const [account, setAccount] = useState(null);\n\n    if (typeof window.ethereum !== \"undefined\") {\n      console.log(\"good\");\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      setAccount(accounts[0]);\n    } else {\n      console.log(\"install metamask\");\n    }\n  };\n\n  _s(initConnection, \"WyX+tBPXi9NsqK+PuQHSadvMfFg=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: initConnection,\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ethers","useState","App","initConnection","account","setAccount","window","ethereum","console","log","accounts","request","method"],"sources":["C:/Users/santi/Desktop/prueba pagina/collection/src/App.js"],"sourcesContent":["import './App.css';\nimport {ethers} from \"ethers\";\nimport { useState } from \"react\";\nfunction App() {\n\n  const initConnection= async () =>{\n    const[account,setAccount] = useState(null);\n    if(typeof window.ethereum !== \"undefined\"){\n      console.log(\"good\");\n      const accounts = await window.ethereum.request({\n        method:\"eth_requestAccounts\"\n      });\n      setAccount(accounts[0]);\n    }else{\n      console.log(\"install metamask\");\n    }\n  }\n\n  return (\n    <div><button onClick={initConnection}>Connect</button>\n    <p>{account}</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAP;AACA,SAAQA,MAAR,QAAqB,QAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AACA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAMC,cAAc,GAAE,YAAW;IAAA;;IAC/B,MAAK,CAACC,OAAD,EAASC,UAAT,IAAuBJ,QAAQ,CAAC,IAAD,CAApC;;IACA,IAAG,OAAOK,MAAM,CAACC,QAAd,KAA2B,WAA9B,EAA0C;MACxCC,OAAO,CAACC,GAAR,CAAY,MAAZ;MACA,MAAMC,QAAQ,GAAG,MAAMJ,MAAM,CAACC,QAAP,CAAgBI,OAAhB,CAAwB;QAC7CC,MAAM,EAAC;MADsC,CAAxB,CAAvB;MAGAP,UAAU,CAACK,QAAQ,CAAC,CAAD,CAAT,CAAV;IACD,CAND,MAMK;MACHF,OAAO,CAACC,GAAR,CAAY,kBAAZ;IACD;EACF,CAXD;;EAFa,GAEPN,cAFO;;EAeb,oBACE;IAAA,wBAAK;MAAQ,OAAO,EAAEA,cAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAL,eACA;MAAA,UAAIC;IAAJ;MAAA;MAAA;MAAA;IAAA,QADA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;KApBQF,G;AAsBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}