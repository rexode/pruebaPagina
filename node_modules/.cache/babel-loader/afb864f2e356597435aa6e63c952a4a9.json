{"ast":null,"code":"\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class AddressCoder extends Coder {\n  constructor(localName) {\n    super(\"address\", \"address\", localName, false);\n  }\n\n  defaultValue() {\n    return \"0x0000000000000000000000000000000000000000\";\n  }\n\n  encode(writer, value) {\n    try {\n      value = getAddress(value);\n    } catch (error) {\n      this._throwError(error.message, value);\n    }\n\n    return writer.writeValue(value);\n  }\n\n  decode(reader) {\n    return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n  }\n\n}","map":{"version":3,"mappings":"AAAA;;AAEA,SAASA,UAAT,QAA2B,wBAA3B;AACA,SAASC,UAAT,QAA2B,sBAA3B;AAEA,SAASC,KAAT,QAAsC,kBAAtC;AAEA,OAAM,MAAOC,YAAP,SAA4BD,KAA5B,CAAiC;EAEnCE,YAAYC,SAAZ,EAA6B;IACzB,MAAM,SAAN,EAAiB,SAAjB,EAA4BA,SAA5B,EAAuC,KAAvC;EACH;;EAEDC,YAAY;IACR,OAAO,4CAAP;EACH;;EAEDC,MAAM,CAACC,MAAD,EAAiBC,KAAjB,EAA8B;IAChC,IAAI;MACAA,KAAK,GAAGT,UAAU,CAACS,KAAD,CAAlB;IACH,CAFD,CAEE,OAAOC,KAAP,EAAc;MACZ,KAAKC,WAAL,CAAiBD,KAAK,CAACE,OAAvB,EAAgCH,KAAhC;IACH;;IACD,OAAOD,MAAM,CAACK,UAAP,CAAkBJ,KAAlB,CAAP;EACH;;EAEDK,MAAM,CAACC,MAAD,EAAe;IACjB,OAAOf,UAAU,CAACC,UAAU,CAACc,MAAM,CAACC,SAAP,GAAmBC,WAAnB,EAAD,EAAmC,EAAnC,CAAX,CAAjB;EACH;;AArBkC","names":["getAddress","hexZeroPad","Coder","AddressCoder","constructor","localName","defaultValue","encode","writer","value","error","_throwError","message","writeValue","decode","reader","readValue","toHexString"],"sources":["C:\\Users\\santi\\Desktop\\pruebapagina\\node_modules\\@ethersproject\\abi\\src.ts\\coders\\address.ts"],"sourcesContent":["\"use strict\";\r\n\r\nimport { getAddress } from \"@ethersproject/address\";\r\nimport { hexZeroPad } from \"@ethersproject/bytes\";\r\n\r\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\r\n\r\nexport class AddressCoder extends Coder {\r\n\r\n    constructor(localName: string) {\r\n        super(\"address\", \"address\", localName, false);\r\n    }\r\n\r\n    defaultValue(): string {\r\n        return \"0x0000000000000000000000000000000000000000\";\r\n    }\r\n\r\n    encode(writer: Writer, value: string): number {\r\n        try {\r\n            value = getAddress(value)\r\n        } catch (error) {\r\n            this._throwError(error.message, value);\r\n        }\r\n        return writer.writeValue(value);\r\n    }\r\n\r\n    decode(reader: Reader): any {\r\n        return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}